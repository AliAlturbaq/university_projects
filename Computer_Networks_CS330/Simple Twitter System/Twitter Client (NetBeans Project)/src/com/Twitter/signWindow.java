package com.Twitter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author SONY
 */
public class signWindow extends javax.swing.JFrame {

    /**
     * Creates new form LogInAndSignIn
     */
    
    public signWindow() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        signupButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("username");

        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("password");

        passwordField.setToolTipText("");

        loginButton.setText("login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        signupButton.setText("signup");
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameField)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(signupButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed

        
        
       
         
      if(usernameField.getText().trim().equals("") || passwordField.getText().trim().equals(""))
          JOptionPane.showMessageDialog(this,"Enter username or password");
      else
      {
          try {
                client =  new Socket(serverIP,serverPortNumber);
                toServer = new PrintWriter(client.getOutputStream(),true);

                fromServer = new ObjectInputStream(client.getInputStream());
                System.out.println("nice");
       
                toServer.println("1");
                toServer.println(usernameField.getText());
                toServer.println(passwordField.getText());
       
                String serverMsg =null;
                        
                        System.out.println("imhere  3");
                        serverMsg = (String) fromServer.readObject();
                        System.out.println("imhere   4");
                        
                    System.out.println(serverMsg);
                    //System.out.println(serverMsg);
                    if("ok".equals(serverMsg))
                    {


                        System.out.println(serverMsg);

                        mainWindow mainW = new mainWindow(fromServer,toServer,false,usernameField.getText());
                        mainW.setVisible(true);
                        this.dispose();
                        


                    }
                    else if("error".equals(serverMsg))
                        JOptionPane.showMessageDialog(this,"usernam or password no valid");

          } 
          catch (IOException | ClassNotFoundException ex) {
              JOptionPane.showMessageDialog(this,"there is problem in connection try agane later ");
            //Logger.getLogger(LogInAndSignIn.class.getName()).log(Level.SEVERE, null, ex);
          }
          
         
         
     }
      
      
    
       
        // TODO add your handling code here:
    }//GEN-LAST:event_loginButtonActionPerformed

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
       
        
        if(usernameField.getText().trim().equals("") || passwordField.getText().trim().equals(""))
          JOptionPane.showMessageDialog(this,"Enter username or password");
      else
      {
          try {
                client =  new Socket(serverIP,serverPortNumber);
                toServer = new PrintWriter(client.getOutputStream(),true);

                fromServer = new ObjectInputStream(client.getInputStream());
                System.out.println("nice");
       
                toServer.println("2");
                toServer.println(usernameField.getText());
                toServer.println(passwordField.getText());
       
                String serverMsg =null;
                        
                        System.out.println("imhere  3");
                        serverMsg = (String) fromServer.readObject();
                        System.out.println("imhere   4");
                        
                    System.out.println(serverMsg);
                    //System.out.println(serverMsg);
                    if("ok".equals(serverMsg))
                    {


                        System.out.println(serverMsg);

                        mainWindow mainW = new mainWindow(fromServer,toServer,true,usernameField.getText());
                        mainW.setVisible(true);
                        this.dispose();


                    }
                    else if("error".equals(serverMsg))
                        JOptionPane.showMessageDialog(this,"usernam or password no valid");

          } 
          catch (IOException | ClassNotFoundException ex) {
              JOptionPane.showMessageDialog(this,"there is problem in connection try agane later ");
            //Logger.getLogger(LogInAndSignIn.class.getName()).log(Level.SEVERE, null, ex);
          }
          
         
         
     }
      
      
    
           
        
        // TODO add your handling code here:
    }//GEN-LAST:event_signupButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(signWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(signWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(signWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(signWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new signWindow().setVisible(true);
                
            }
        });
    }
    Socket client;
    ObjectInputStream fromServer;
    PrintWriter toServer;
    String serverIP = "192.168.43.77";
    int serverPortNumber = 6788 ;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField passwordField;
    private javax.swing.JButton signupButton;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
